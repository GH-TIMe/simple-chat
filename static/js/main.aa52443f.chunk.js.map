{"version":3,"sources":["components/JoinBlock/index.jsx","components/AutoSizeTextArea.jsx","components/Chat/index.jsx","socket.js","App.jsx","index.js"],"names":["JoinBlock","onLogin","useState","roomID","setRoomID","userName","setUserName","isLoading","setLoading","onSubmit","e","preventDefault","obj","onSignIn","className","htmlFor","onChange","target","value","handleRoomID","id","required","type","placeholder","disabled","role","aria-hidden","AutoSizeTextArea","refLink","onPressEnter","rows","minRows","maxRows","state","setState","ref","aria-label","style","resize","previousRows","currentRows","scrollHeight","scrollTop","onKeyDown","keyCode","onEnter","autoFocus","Chat","users","messages","handleSendMessage","textAreaEl","useRef","messageBlocks","useEffect","current","sendMessage","getTextValue","clearField","length","map","user","index","key","text","author","onClick","socket","io","connect","reducer","action","payload","joined","App","useReducer","dispatch","a","emit","axios","get","data","setUsers","setMessage","on","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aa52443f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./JoinBlock.scss\";\r\n\r\nconst JoinBlock = ({ onLogin }) => {\r\n  const [roomID, setRoomID] = useState(\"test\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const handleRoomID = (e) => {\r\n    setRoomID(e.target.value);\r\n  };\r\n\r\n  const handleUserName = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  const onSignIn = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const obj = {\r\n      roomID,\r\n      userName,\r\n    };\r\n    setLoading(false);\r\n    onLogin(obj);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        onSignIn(e);\r\n      }}\r\n      className=\"form-size\"\r\n    >\r\n      <h1 className=\"text-center\">Войти</h1>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"chat-rooms\">Room:</label>\r\n        <select\r\n          onChange={(e) => handleRoomID(e)}\r\n          className=\"custom-select\"\r\n          id=\"chat-rooms\"\r\n          value={roomID}\r\n          required\r\n        >\r\n          <option value=\"test\">test</option>\r\n          <option value=\"frontend\">frontend</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"username\">Name:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"name\"\r\n          placeholder=\"Enter your name\"\r\n          className=\"form-control\"\r\n          onChange={handleUserName}\r\n          value={userName}\r\n          required\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"btn btn-primary btn-block\"\r\n        type=\"submit\"\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <>\r\n            <span\r\n              className=\"spinner-border spinner-border-sm spinner-margin\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n            Loading...\r\n          </>\r\n        ) : (\r\n          \"Sign in\"\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default JoinBlock;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AutoSizeTextArea = ({ refLink, onPressEnter }) => {\r\n  const [state, setState] = useState({\r\n    value: \"\",\r\n    rows: 1,\r\n    minRows: 1,\r\n    maxRows: 3,\r\n  });\r\n\r\n  const onEnter = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      onPressEnter();\r\n    }\r\n  };\r\n\r\n  const handeChange = (e) => {\r\n    const textareaLineHeight = 24;\r\n\r\n    const { minRows, maxRows } = state;\r\n\r\n    const previousRows = e.target.rows;\r\n    e.target.rows = minRows;\r\n\r\n    const currentRows = ~~(e.target.scrollHeight / textareaLineHeight);\r\n\r\n    if (currentRows === previousRows) {\r\n      e.target.rows = currentRows;\r\n    }\r\n\r\n    if (currentRows >= maxRows) {\r\n      e.target.rows = maxRows;\r\n      e.target.scrollTop = e.target.scrollHeight;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      rows: currentRows < maxRows ? currentRows : maxRows,\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <textarea\r\n      ref={refLink}\r\n      className=\"form-control textarea-autosize\"\r\n      aria-label=\"With textarea\"\r\n      rows={state.rows}\r\n      style={{ resize: \"none\" }}\r\n      placeholder=\"Message\"\r\n      onChange={handeChange}\r\n      onKeyDown={(e) => onEnter(e)}\r\n      autoFocus\r\n    ></textarea>\r\n  );\r\n};\r\n\r\nexport default AutoSizeTextArea;\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport AutoSizeTextArea from \"../AutoSizeTextArea\";\r\n\r\nimport \"./Chat.scss\";\r\n\r\nconst Chat = ({ users, messages, handleSendMessage }) => {\r\n  const textAreaEl = useRef(null);\r\n  const messageBlocks = useRef(null);\r\n\r\n  useEffect(() => {\r\n    messageBlocks.current.scrollTop = messageBlocks.current.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (textAreaEl.current.value !== \"\") {\r\n      handleSendMessage(getTextValue(textAreaEl));\r\n      clearField();\r\n    }\r\n  };\r\n\r\n  const getTextValue = () => textAreaEl.current.value;\r\n  const clearField = () => {\r\n    textAreaEl.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"container\">\r\n        <div className=\"chat__content\">\r\n          <div className=\"chat__left-side\">\r\n            <h4 className=\"chat__online\">Users ({users.length}):</h4>\r\n            <ul className=\"chat__users\">\r\n              {users.map((user, index) => (\r\n                <li className=\"chat__user\" key={`${user}_${index}`}>\r\n                  {user}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"chat__right-side\">\r\n            <ul className=\"chat__messages\" ref={messageBlocks}>\r\n              {messages.map(({ text, author }, index) => (\r\n                <li className=\"chat__message\" key={`${author}_${index}`}>\r\n                  <div className=\"chat__bubble\">\r\n                    <p className=\"chat__text\">{text}</p>\r\n                  </div>\r\n                  <div className=\"chat__author\">{author}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"input-group chat__input-text\">\r\n              <AutoSizeTextArea\r\n                refLink={textAreaEl}\r\n                onPressEnter={sendMessage}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  onClick={sendMessage}\r\n                  className=\"btn btn-primary\"\r\n                  type=\"button\"\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import io from \"socket.io-client\";\r\n\r\nconst socket = io.connect();\r\n\r\nexport default socket;\r\n","import React, { useReducer, useEffect } from \"react\";\nimport { JoinBlock, Chat } from \"./components\";\nimport socket from \"./socket\";\nimport axios from \"axios\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"JOINED\": {\n      return {\n        ...state,\n        roomID: action.payload.roomID,\n        userName: action.payload.userName,\n        joined: true,\n      };\n    }\n    case \"SET_USERS\": {\n      return {\n        ...state,\n        users: action.payload,\n      };\n    }\n    case \"SET_MESSAGES\": {\n      return {\n        ...state,\n        messages: action.payload,\n      };\n    }\n    case \"SET_DATA\": {\n      return {\n        ...state,\n        users: action.payload.users,\n        messages: action.payload.messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    joined: false,\n    roomID: null,\n    userName: null,\n    users: [],\n    messages: [],\n  });\n\n  const onLogin = async (obj) => {\n    dispatch({\n      type: \"JOINED\",\n      payload: obj,\n    });\n    socket.emit(\"ROOM:JOIN\", obj);\n    const { data } = await axios.get(`/rooms/${obj.roomID}`);\n    dispatch({\n      type: \"SET_DATA\",\n      payload: data,\n    });\n  };\n\n  const sendMessage = (text) => {\n    const message = {\n      roomID: state.roomID,\n      text,\n      author: state.userName,\n    };\n    socket.emit(\"ROOM:SET_MESSAGE\", message);\n  };\n\n  const setUsers = (users) => {\n    dispatch({\n      type: \"SET_USERS\",\n      payload: users,\n    });\n  };\n\n  const setMessage = (messages) => {\n    dispatch({\n      type: \"SET_MESSAGES\",\n      payload: messages,\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"ROOM:SET_USERS\", setUsers);\n    socket.on(\"ROOM:SET_MESSAGES\", setMessage);\n  }, [dispatch]);\n\n  return (\n    <div className=\"wrapper\">\n      {state.joined ? (\n        <Chat {...state} handleSendMessage={sendMessage} />\n      ) : (\n        <JoinBlock onLogin={onLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\n// import \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
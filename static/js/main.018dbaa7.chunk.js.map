{"version":3,"sources":["components/JoinBlock/index.jsx","server.js","socket.js","components/AutoSizeTextArea.jsx","components/Chat/index.jsx","App.jsx","index.js"],"names":["JoinBlock","onLogin","useState","roomID","setRoomID","userName","setUserName","isLoading","setLoading","onSubmit","e","preventDefault","obj","onSignIn","className","htmlFor","onChange","target","value","handleRoomID","id","required","type","placeholder","disabled","role","aria-hidden","API_HOST","socket","io","connect","AutoSizeTextArea","refLink","initialState","rows","minRows","maxRows","state","setState","handleSubmit","keyCode","shiftKey","classList","contains","ref","aria-label","style","resize","previousRows","currentRows","scrollHeight","scrollTop","onKeyDown","autoFocus","onClick","Swither","setRoom","disable","setDisable","switcher","useRef","activeRoom","setActiveRoom","handleOutsideClick","path","composedPath","includes","current","useEffect","document","body","addEventListener","focusable","data-prefix","data-icon","classNames","active","xmlns","viewBox","width","fill","d","map","room","index","emit","oldRoom","newRoom","onSelectRoom","key","Chat","users","messages","handleSendMessage","textAreaEl","messageBlocks","sideBarStatus","setSideBarStatus","getTextValue","handleSideBar","length","user","text","author","reducer","action","payload","joined","App","useReducer","dispatch","a","axios","get","data","setUsers","setMessage","on","message","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.018dbaa7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./JoinBlock.scss\";\r\n\r\nconst JoinBlock = ({ onLogin }) => {\r\n  const [roomID, setRoomID] = useState(\"test\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const handleRoomID = (e) => {\r\n    setRoomID(e.target.value);\r\n  };\r\n\r\n  const handleUserName = (e) => {\r\n    setUserName(e.target.value);\r\n  };\r\n\r\n  const onSignIn = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const obj = {\r\n      roomID,\r\n      userName,\r\n    };\r\n    setLoading(false);\r\n    onLogin(obj);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        onSignIn(e);\r\n      }}\r\n      className=\"form-size\"\r\n    >\r\n      <h1 className=\"text-center\">Войти</h1>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"chat-rooms\">Room:</label>\r\n        <select\r\n          onChange={(e) => handleRoomID(e)}\r\n          className=\"custom-select\"\r\n          id=\"chat-rooms\"\r\n          value={roomID}\r\n          required\r\n        >\r\n          <option value=\"test\">test</option>\r\n          <option value=\"frontend\">frontend</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"username\">Name:</label>\r\n        <input\r\n          id=\"username\"\r\n          type=\"name\"\r\n          placeholder=\"Enter your name\"\r\n          className=\"form-control\"\r\n          onChange={handleUserName}\r\n          value={userName}\r\n          required\r\n        />\r\n      </div>\r\n      <button\r\n        className=\"btn btn-primary btn-block\"\r\n        type=\"submit\"\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading ? (\r\n          <>\r\n            <span\r\n              className=\"spinner-border spinner-border-sm spinner-margin\"\r\n              role=\"status\"\r\n              aria-hidden=\"true\"\r\n            ></span>\r\n            Loading...\r\n          </>\r\n        ) : (\r\n          \"Sign in\"\r\n        )}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default JoinBlock;\r\n","export const API_HOST = \"https://chat-backend-socket-vers.herokuapp.com\";\r\n// export const API_HOST = \"http://localhost:9000\";\r\n","import io from \"socket.io-client\";\r\nimport { API_HOST } from \"./server\";\r\n\r\nconst socket = io.connect(API_HOST);\r\n\r\nexport default socket;\r\n","import React, { useState } from \"react\";\r\n\r\nconst AutoSizeTextArea = ({ refLink, onSubmit }) => {\r\n  const initialState = {\r\n    value: \"\",\r\n    rows: 1,\r\n    minRows: 1,\r\n    maxRows: 3,\r\n  };\r\n\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const handleSubmit = (e) => {\r\n    if (\r\n      (e.keyCode === 13 && !e.shiftKey) ||\r\n      e.target.classList.contains(\"btn-send\")\r\n    ) {\r\n      e.preventDefault();\r\n      onSubmit();\r\n      setState(initialState);\r\n    }\r\n  };\r\n\r\n  const handeChange = (e) => {\r\n    const textareaLineHeight = 24;\r\n\r\n    const { minRows, maxRows } = state;\r\n\r\n    const previousRows = e.target.rows;\r\n    e.target.rows = minRows;\r\n\r\n    const currentRows = ~~(e.target.scrollHeight / textareaLineHeight);\r\n\r\n    if (currentRows === previousRows) {\r\n      e.target.rows = currentRows;\r\n    }\r\n\r\n    if (currentRows >= maxRows) {\r\n      e.target.rows = maxRows;\r\n      e.target.scrollTop = e.target.scrollHeight;\r\n    }\r\n\r\n    setState({\r\n      ...state,\r\n      rows: currentRows < maxRows ? currentRows : maxRows,\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <textarea\r\n        ref={refLink}\r\n        className=\"form-control textarea-autosize\"\r\n        aria-label=\"With textarea\"\r\n        rows={state.rows}\r\n        style={{ resize: \"none\" }}\r\n        placeholder=\"Message\"\r\n        value={state.value}\r\n        onChange={handeChange}\r\n        onKeyDown={handleSubmit}\r\n        autoFocus\r\n      ></textarea>\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          onClick={handleSubmit}\r\n          className=\"btn btn-primary btn-send\"\r\n          type=\"button\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AutoSizeTextArea;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport socket from \"../../socket\";\r\nimport AutoSizeTextArea from \"../AutoSizeTextArea\";\r\n\r\nimport \"./Chat.scss\";\r\n\r\nconst Swither = ({ roomID, setRoom }) => {\r\n  const [disable, setDisable] = useState(true);\r\n  const switcher = useRef();\r\n  const [activeRoom, setActiveRoom] = useState(roomID);\r\n\r\n  const handleOutsideClick = (e) => {\r\n    const path = e.path || (e.composedPath && e.composedPath());\r\n    if (path) {\r\n      if (!path.includes(switcher.current)) {\r\n        setDisable(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSelectRoom = (room) => {\r\n    if (room === activeRoom) {\r\n      return;\r\n    }\r\n\r\n    socket.emit(\"ROOM:REJOIN\", { oldRoom: activeRoom, newRoom: room });\r\n    setRoom(room);\r\n    setActiveRoom(room);\r\n    setDisable(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.body.addEventListener(\"click\", handleOutsideClick);\r\n  }, []);\r\n\r\n  const handleClick = () => {\r\n    setDisable(!disable);\r\n  };\r\n\r\n  const rooms = [\"test\", \"frontend\"];\r\n\r\n  return (\r\n    <div className=\"switcher\" ref={switcher}>\r\n      <h5 className=\"switcher__title\">\r\n        room:\r\n        <div className=\"switcher__content\">\r\n          <span className=\"switcher__active-room\" onClick={handleClick}>\r\n            {activeRoom}\r\n          </span>\r\n          <svg\r\n            aria-hidden=\"true\"\r\n            focusable=\"false\"\r\n            data-prefix=\"fas\"\r\n            data-icon=\"caret-down\"\r\n            className={classNames(\"switcher__icon\", {\r\n              active: !disable,\r\n            })}\r\n            role=\"img\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 320 512\"\r\n            width=\"10\"\r\n          >\r\n            <path\r\n              fill=\"currentColor\"\r\n              d=\"M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z\"\r\n            ></path>\r\n          </svg>\r\n          <ul\r\n            className={classNames(\"switcher__rooms\", {\r\n              disable: disable,\r\n            })}\r\n          >\r\n            {rooms.map((room, index) => (\r\n              <li\r\n                className={classNames(\"switcher__room\", {\r\n                  active: activeRoom === room,\r\n                })}\r\n                onClick={() => onSelectRoom(room)}\r\n                key={`${room}_${index}`}\r\n              >\r\n                {room}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Chat = ({\r\n  users,\r\n  messages,\r\n  handleSendMessage,\r\n  roomID,\r\n  setRoom,\r\n  userName,\r\n}) => {\r\n  const textAreaEl = useRef(null);\r\n  const messageBlocks = useRef(null);\r\n  const [sideBarStatus, setSideBarStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    messageBlocks.current.scrollTop = messageBlocks.current.scrollHeight;\r\n  }, [messages]);\r\n\r\n  const sendMessage = () => {\r\n    if (textAreaEl.current.value !== \"\") {\r\n      handleSendMessage(getTextValue(textAreaEl));\r\n    }\r\n  };\r\n\r\n  const getTextValue = () => textAreaEl.current.value;\r\n\r\n  const handleSideBar = () => {\r\n    setSideBarStatus(!sideBarStatus);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__container\">\r\n        <div className=\"chat__content\">\r\n          <div\r\n            className={classNames(\"chat__left-side\", {\r\n              active: sideBarStatus,\r\n            })}\r\n          >\r\n            <div className=\"chat__left-side-container\">\r\n              <div className=\"sidebar__close\">\r\n                <svg\r\n                  onClick={handleSideBar}\r\n                  aria-hidden=\"true\"\r\n                  focusable=\"false\"\r\n                  data-prefix=\"fas\"\r\n                  data-icon=\"times\"\r\n                  role=\"img\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  width=\"15\"\r\n                  viewBox=\"0 0 352 512\"\r\n                >\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\r\n                  ></path>\r\n                </svg>\r\n              </div>\r\n              <Swither roomID={roomID} setRoom={setRoom} />\r\n              <h4 className=\"chat__online\">Users ({users.length}):</h4>\r\n              <ul className=\"chat__users\">\r\n                {users.map((user, index) => (\r\n                  <li className=\"chat__user\" key={`${user}_${index}`}>\r\n                    {user}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat__right-side\">\r\n            <div className=\"sidebar__open\">\r\n              <svg\r\n                onClick={handleSideBar}\r\n                aria-hidden=\"true\"\r\n                focusable=\"false\"\r\n                data-prefix=\"fas\"\r\n                data-icon=\"bars\"\r\n                role=\"img\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"20\"\r\n                viewBox=\"0 0 448 512\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z\"\r\n                ></path>\r\n              </svg>\r\n              <span>{userName}</span>\r\n            </div>\r\n            <ul className=\"chat__messages\" ref={messageBlocks}>\r\n              {messages.map(({ text, author }, index) => (\r\n                <li className=\"chat__message\" key={`${author}_${index}`}>\r\n                  <div className=\"chat__bubble\">\r\n                    <p className=\"chat__text\">{text}</p>\r\n                  </div>\r\n                  <div className=\"chat__author\">{author}</div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"input-group chat__input-text\">\r\n              <AutoSizeTextArea refLink={textAreaEl} onSubmit={sendMessage} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","import React, { useReducer, useEffect } from \"react\";\nimport { JoinBlock, Chat } from \"./components\";\nimport socket from \"./socket\";\nimport axios from \"axios\";\nimport { API_HOST } from \"./server\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_ROOM\": {\n      return {\n        ...state,\n        roomID: action.payload,\n      };\n    }\n    case \"JOINED\": {\n      return {\n        ...state,\n        roomID: action.payload.roomID,\n        userName: action.payload.userName,\n        joined: true,\n      };\n    }\n    case \"SET_USERS\": {\n      return {\n        ...state,\n        users: action.payload,\n      };\n    }\n    case \"SET_MESSAGES\": {\n      return {\n        ...state,\n        messages: action.payload,\n      };\n    }\n    case \"SET_DATA\": {\n      return {\n        ...state,\n        users: action.payload.users,\n        messages: action.payload.messages,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, {\n    joined: false,\n    roomID: null,\n    userName: null,\n    users: [],\n    messages: [],\n  });\n\n  const onLogin = async (obj) => {\n    dispatch({\n      type: \"JOINED\",\n      payload: obj,\n    });\n    socket.emit(\"ROOM:JOIN\", obj);\n    const { data } = await axios.get(`${API_HOST}/rooms/${obj.roomID}`);\n    dispatch({\n      type: \"SET_DATA\",\n      payload: data,\n    });\n  };\n\n  const sendMessage = (text) => {\n    const message = {\n      roomID: state.roomID,\n      text,\n      author: state.userName,\n    };\n    socket.emit(\"ROOM:SET_MESSAGE\", message);\n  };\n\n  const setUsers = (users) => {\n    dispatch({\n      type: \"SET_USERS\",\n      payload: users,\n    });\n  };\n\n  const setMessage = (messages) => {\n    dispatch({\n      type: \"SET_MESSAGES\",\n      payload: messages,\n    });\n  };\n\n  const setRoom = (roomID) => {\n    dispatch({\n      type: \"SET_ROOM\",\n      payload: roomID,\n    });\n  };\n\n  useEffect(() => {\n    socket.on(\"ROOM:SET_USERS\", setUsers);\n    socket.on(\"ROOM:SET_MESSAGES\", setMessage);\n  }, []);\n\n  return (\n    <div className=\"wrapper\">\n      {state.joined ? (\n        <Chat {...state} handleSendMessage={sendMessage} setRoom={setRoom} />\n      ) : (\n        <JoinBlock onLogin={onLogin} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}